;;; -*- coding: utf-8; -*-
;;; Automatically generated on Sun Mar  3 20:33:36 2024
;;; Invoked by charles@mbp2020 using 30.0.50
(setq-default session-file-alist '(("~/.emacs.d/lisp/init-yaml.el" 379 211 1 nil nil nil (overwrite-mode)) ("~/.emacs.d/lisp/init-fonts.el" 3874 1157 1 nil nil 4659 (overwrite-mode)) ("~/.emacs.d/lisp/init-themes.el" 460 461 1 nil nil 510 (overwrite-mode)) ("~/.zshenv" 1 2227 1 nil nil nil (overwrite-mode)) ("~/.emacs.d/custom.el" 1 1 1 nil nil 5938 (overwrite-mode)) ("~/.emacs.d/lisp/init-local.el" 3408 3189 1 nil nil 180 (overwrite-mode)) ("~/Desktop/emacs_todo.org" 1 71445 1 nil nil 16 (overwrite-mode)) ("~/.emacs.d/init.el" 346 1 1 nil nil nil (overwrite-mode)) ("~/Developer/c-dev/nl_langinfo_exer/nl_lang_exer.c" 190 190 1 nil nil 172 (overwrite-mode)) ("~/.emacs.d/lisp/init-editing-utils.el" 1334 1135 1 nil nil 1139 (overwrite-mode))))
(setq-default file-name-history '("~/.emacs.d/lisp/init-elpa.el" "~/.emacs.d/custom.el" "~/.config/lsd/config.yaml" "~/Library/Preferences/espanso/match/base.yml" "~/.emacs.d/lisp/init-fonts.el" "~/.emacs.d/.bookmarks.el" "~/.emacs.d/lisp/init-yaml.el" "~/Developer/lua-dev/bignumber.lua" "~/.config/lsd/themes/chl.yaml" "~/.config/lsd/colors.yaml" "~/.config/starship.toml" "~/.emacs.d/lisp/init-editing-utils.el" "~/Developer/lua-dev/hello.lua" "~/.emacs.d/lisp/init-lua.el" "~/.emacs.d/init.el" "~/.emacs.d/lisp/init-themes.el" "~/.emacs.d/elpa-30.0/lua-mode-20221218.605/lua-mode.el" "~/.hammerspoon/Spoons/AClock.spoon/init.lua" "~/.hammerspoon/Spoons/AClock.spoon/docs.json" "~/.emacs.d/site-lisp/systempath/TAGS" "~/Developer/emacs-src/TAGS" "~/.hammerspoon/init.lua" "~/.emacs.d/elpa-30.0/fullframe-20210226.1057/fullframe.el" "~/.emacs.d/lisp/init-git.el" "~/.emacs.d/lisp/init-flycheck.el" "~/.emacs.d/lisp/init-rust.el" "~/.emacs.d/lisp/init-asymptote.el" "~/.config/yamllint/config" "~/Library/Preferences/espanso/match/packages/all-emojis/package.yml" "~/Developer/lisp-dev/factorial.rkt" "~/Library/Preferences/espanso/config/default.yml" "~/Library/Preferences/espanso/config/emacs.yml" "~/.emacs.d/elpa-30.0/geiser-racket-20210421.125/geiser-racket.el" "~/.emacs.d/lisp/init-scheme.el" "~/Developer/emacs-src/src/treesit.c" "~/.emacs.d/lisp/init-local.el"))
(setq-default search-ring '(#("compat" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("page" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("3" 0 1 (isearch-case-fold-search t isearch-regexp-function nil)) #("yml" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("treesit" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("rtlib" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("debug" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("gambit" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #(":" 0 1 (isearch-case-fold-search t isearch-regexp-function nil)) #("funcall" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("emacs_rt" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("runtime" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("EMACS_ATTRIBUTE_NONNULL" 0 23 (isearch-case-fold-search nil isearch-regexp-function nil)) #("NOEXCEPT" 0 8 (isearch-case-fold-search nil isearch-regexp-function nil)) #("other-holidays" 0 14 (isearch-case-fold-search t isearch-regexp-function nil)) #("whitespace" 0 10 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq-default Info-minibuf-history '(#("(elisp)" 0 7 (ivy-index 0))))
(setq-default Info-search-history '("schedule" "rec" "Xdefaults" "Xresources" "(take" "take"))
(setq-default Man-topic-history '(#("LocateMe" 0 8 (ivy-index 0 idx 1004)) #("printf" 0 6 (ivy-index 1 idx 8664)) #("MMX" 0 3 (idx 407 ivy-index 0)) #("printf(1)" 0 9 (help-echo "format and print data" ivy-index 0)) #("man" 0 3 (ivy-index 0))))
(setq-default bookmark-history '("binance_tool.py" "init-gui-frames.el" #("init-gui-frames.el" 0 18 (ivy-index 0)) #("init-local.el" 0 13 (ivy-index 0)) "init-local.el<2>" #("init-local.el<2>" 0 16 (ivy-index 1)) "init-asymptote.el" #("init-asymptote.el" 0 17 (ivy-index 1))))
(setq-default c-set-style-history '(#("k&r" 0 3 (ivy-index 3 idx 3)) #("gnu" 0 3 (ivy-index 2 idx 2)) #("user" 0 4 (ivy-index 1 idx 1)) #("cc-mode" 0 7 (ivy-index 0 idx 0)) #("bsd" 0 3 (ivy-index 4 idx 4))))
(setq-default calc-alg-entry-history '("arcsinh($ - $$)" "pi^2" "sqrt(2+3)"))
(setq-default calc-quick-calc-history '("2^128" "2^32" "arcsin(0.5)" "arcsin(0.5)*6" "sqrt(2)"))
(setq-default charset-history '("ascii" #("unicode-smp" 0 11 (ivy-index 1 idx 39)) #("unicode-bmp" 0 11 (ivy-index 1 idx 40))))
(setq-default cmake-help-complete-history '(#("add_executable" 0 14 (ivy-index 0))))
(setq-default coding-system-history '("utf-8" #("utf-8-unix" 0 10 (ivy-index 1044 idx 1044)) #("utf-8" 0 5 (ivy-index 24 idx 1041)) #("utf-8-mac" 0 9 (ivy-index 25 idx 1042)) #("utf-8-auto" 0 10 (idx 877 ivy-index 15))))
(setq-default consult--grep-history '("#comp-async" "#subword-mode" "#treesit" "#anzu" "#page" "#hl-line" "#column-number" "#mouse" "#cele" "#indication" "#vlf" "#quelpa" "#lsp" "#helpful" "#simple" "#get-geo" "#line-spacing" "#counsel"))
(setq-default consult--man-history '("#nl_l" "#langinfo" "#lpr" "lpr" "#pwd"))
(setq-default consult--theme-history '("timu-macos" "modus-vivendi" "timu-caribbean" "modus-operandi"))
(setq-default consult-xref--history '("msdos/langinfo.h:20:#define nl_langinfo(" "/Users/charles/.pyenv/versions/3.11.1/lib/python3.11/site-packages/polars/__init__.py:154:scan_csv,"))
(setq-default counsel-apropos-history '(#("two-mode-mode" 0 13 (ivy-index 0)) #("Xresources" 0 10 (ivy-index 0)) #("early-init" 0 10 (ivy-index 0)) "early-init-file" #("vector" 0 6 (ivy-index 30)) #("line-number" 0 11 (ivy-index 20)) "menu-bar-display-line-numbers-mode" #("string" 0 6 (ivy-index 244)) "c-string-delims" #("file-name" 0 9 (ivy-index 10)) "directory-file-name"))
(setq-default counsel-git-grep-history '(#("Waiting for git" 0 15 (ivy-index 0)) "org-roam-ui-20221105.1040/out/_next/static/chunks/879-09bfd8a9d59d1f41b6f4.js:1:[Omitted long matching line]" #("ImageResult" 0 11 (ivy-index 2)) "examples/write_png.rs:1:use image::ImageResult;" #("Result" 0 6 (ivy-index 1)) "src/lib.rs:62:pub fn write_png_image(filename: &str, pixels: &[u8], bounds: (usize, usize)) -> ImageResult<()> {" #("ImageEncoder" 0 12 (ivy-index 0)) "src/lib.rs:2:use image::{ColorType, ImageEncoder, ImageResult};" #("rg" 0 2 (ivy-index 0)) #("fill-column" 0 11 (ivy-index 0)) "init-fonts.el:9:(defun sanityinc/maybe-adjust-visual-fill-column ()" #("begin" 0 5 (ivy-index 2)) "axodraw2demo.tex:6:        \\begin{axopicture} (200,110)" #("swiper" 0 6 (ivy-index 1)) "init-ivy.el:76:    (define-key ivy-mode-map (kbd \"M-s /\") 'swiper-thing-at-point)))"))
(setq-default counsel-imenu-history '(#("config" 0 6 (ivy-index 0)) "config_logging (def)" #("ticker" 0 6 (ivy-index 0)) "bn_price (def): TickerPrice (class)" #("price" 0 5 (ivy-index 1)) #("depo" 0 4 (ivy-index 0)) "bn_deposit (def)"))
(setq-default counsel-org-goto-history '(#("成都万达国际医院项目/与临床、护理和医疗设备条线沟通探头洗消间、耳鼻喉门诊腔镜清洗间、口腔技工室、水疗池、智能药柜、测听室和全科诊疗系统" 0 10 (ivy-index 28 idx 28 face counsel-outline-default fontified t) 10 11 (ivy-index 28 idx 28) 11 68 (ivy-index 28 idx 28 isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show face counsel-outline-default fontified t)) #("个人事务/帮李佳投票" 0 4 (ivy-index 37 idx 37 org-category #1="notes" face counsel-outline-default fontified t) 4 5 (ivy-index 37 idx 37) 5 10 (ivy-index 37 idx 37 org-fold--spec-org-fold-outline-1678697399036363749 org-fold-outline face counsel-outline-default org-todo-head #("TODO" 0 4 ...) org-category #1# font-lock-fontified t fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show))))
(setq-default counsel-unicode-char-history '(#("2008" 0 4 (ivy-index 0)) "002008 PUNCTUATION SPACE                                           "))
(setq-default eww-prompt-history '("cn.bing.com"))
(setq-default extended-command-history '("package-install" "package-delete" "package-upgrade-all" "package-list-packages" "set-bilingual-font" "crux-kill-other-buffers" "lsp-mode" "emacs-lisp-mode" "geiser-show-logs" "geiser" "geiser-chez" "fringe-mode" "geiser-racket" "restart-emacs" "c-ts-mode-menu" "c-ts-mode-set-global-style"))
(setq-default face-name-history '("Info-quoted" "org-default" "variable-pitch" #("org-defa" 0 8 (ivy-index 0)) #("info-h" 0 6 (ivy-index 1)) "info-header-xref" "info-menu-header" #("cons" 0 4 (ivy-index 0)) "font-lock-constant-face" "hl-line" #("default" 0 7 (ivy-index 129)) "internal-border"))
(setq-default flycheck-read-checker-history '("yaml-yamllint" "yaml-ruby" #("yaml-yamllint" 0 13 (ivy-index 0)) #("python-mypy" 0 11 (ivy-index 78)) #("python-pyright" 0 14 (ivy-index 82)) #("python-flake8" 0 13 (ivy-index 0)) #("python-pycheckers" 0 17 (ivy-index 79)) #("python-pylint" 0 13 (ivy-index 81)) #("nim-nimsuggest" 0 14 (ivy-index 0)) #("emacs-lisp" 0 10 (ivy-index 0)) #("emacs-lisp-package" 0 18 (ivy-index 2)) #("emacs-lisp-relint" 0 17 (ivy-index 3)) #("emacs-lisp-checkdoc" 0 19 (ivy-index 0)) #("python-pycompile" 0 16 (ivy-index 0)) #("tex-lacheck" 0 11 (ivy-index 114)) #("c/c++-gcc" 0 9 (ivy-index 7)) #("c/c++-clang" 0 11 (ivy-index 5)) #("c/c++-cppcheck" 0 14 (ivy-index 6)) #("rust-clippy" 0 11 (ivy-index 91)) #("rust" 0 4 (ivy-index 89)) #("tex-chktex" 0 10 (ivy-index 112))))
(setq-default geiser-doc--history '((date->time-utc :f nil) (0 0 . [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil])))
(setq-default goto-line-history '("9" "24" "11" "43" "33" "50" "60" "13" "71" "51"))
(setq-default ido-buffer-history '("init-fonts.el" "init-ivy.el" "*Warnings*" "num_cpus.c"))
(setq-default ido-file-history '("num_cpus.c" "init-ivy.el"))
(setq-default info-lookup-history '(#("ivy-format-functions-alist" 0 26 (fontified nil ivy-index 0)) #("gdb" 0 3 (ivy-index 35 idx 5943))))
(setq-default ledger-minibuffer-history '("salaries"))
(setq-default lsp-rename-history '("data_csv" "series_csv" "series_file"))
(setq-default minibuffer-history '("compat-29.1.4.2" "Hooks" "Configuring Packages" "use-package" "Emacs" "flycheck-yamllint-20170326.1309" "eval-after-load" "racket" "minimal" "half-width" "no-fringes" "geiser-gambit-binary" "XIANGQI RED GENERAL" "ALEF SYMBOL" "FRACTION ONE HALF" "PARTIAL DIFFERENTIAL" "MATHEMATICAL BOLD SMALL THETA" "GREEK THETA SYMBOL" "GREEK CAPITAL LETTER THETA" "-I." "defgroup" "Projects" "cal-china-x" "whitespace-cleanup-mode" "whitespace-cleanup" "defsubst" "native-comp-async-report-warnings-errors" "read-answer-short" "visual-line-mode" "y-or-n-p" "y-or-n-p-with-timeout" "use-short-answers" "c" "kill-buffer-delete-auto-save-files" "defalias" "native-compile-async" "Klee One" "https://github.com/fontworks-fonts/Klee" "芫荽" "https://github.com/ButTaiwan/iansui" "Images" "霞鹜文楷" "https://github.com/lxgw/LxgwWenKai" "霞鹜文楷屏幕阅读版" "https://github.com/lxgw/LxgwWenKai-Screen"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-read-date-history '("   " "23-6-9    " "4pm    " "11am    " "20    " "    " "+1d    " "3pm    " "1:30pm    " "27    " "14 9am +1d    " "14 9am    " "13 10am    " "13 8:30am    " "20:00    " "23    " "2022-11-16    " "11-16    " "16    " "18    " "18 +1w    " "18+1w    " "11-29   09:00    " "11-09    " "10am    " "08 9am    " "11:00    " "10:30    "))
(setq-default org-table-formula-history '("$2+$3-$5" "@2$2+@2$3=@2$5" "@2$2+@2$3"))
(setq-default org-tags-history '(#("wanda" 0 5 (ivy-index 2)) "friend" "macos"))
(setq-default read-char-history '("yes" "r" "o" "
" "'" ";" "\\" "\"" "" "f"))
(setq-default read-envvar-name-history '(#("LIBRARY_PATH" 0 12 (ivy-index 5)) #("CPATH" 0 5 (ivy-index 4)) #("LANG" 0 4 (ivy-index 0)) #("C_INCLUDE_PATH" 0 14 (ivy-index 0))))
(setq-default read-expression-history '("(default-value temp-buffer-resize-mode)"))
(setq-default rg-files-history '(#("all" 0 3 (idx 160 ivy-index 160)) #("elisp" 0 5 (idx 40 ivy-index 40))))
(setq-default rg-pattern-history '("Waiting for git" "lsp-julia-default-depot" "tcc" "search" "rg" "header"))
(setq-default ses-read-cell-history '("-4" "(apply 'ses+ (ses-range A2 A5))" "0" "-4.1" "(+ A2 A3 A4 A5)" "-4.00" "15.76" "0.02" "2.23" "0.02
" "Income"))
(setq-default ses-read-printer-history '("\"$.2f\"" "\"%.20f\"" "(\"%s\")" "\"%s\"" "\"%.7g\"" "ses-prin1" "ses-tildefill-span" "ses-dashfill-span" "ses-dashfill" "ses-center-span" "ses-center"))
(setq-default ses-read-string-history '("Total" "Loan to Joe" "Consulting fee" "Informed option" "Lemonade stand" "Income"))
(setq-default set-variable-value-history '("t" "120" "'(:family \"Rubik\")" "100" "'(\"chaos-pp\" \"order-pp/inc\")" "\"-Wno-unused\"" "/usr/local/include/glib-2.0" "racket"))
(setq-default shell-command-history '("python -m jiebaa -V" "python -m jieba" "python -m pip install jieba" "adainfo stake" "adainfo"))
(setq-default slime-connect-host-history '("localhost"))
(setq-default slime-connect-port-history '("4005"))
(setq-default slime-inferior-lisp-program-history '("clisp" "ccl64"))
(setq-default slime-minibuffer-history '("(defun factorial (n) (if (zerop n) 1 (* n (factorial (1- n)))))" "(if (eql (factorial *my-input*) (fact *my-input*)) :equal)" "(defvar *my-input* 10000 \"my initial input number\")" "(defun fact (n &optional (so-far 1))
  (if (<= n 0) so-far
      (fact (- n 1) (* n so-far))))" "(defglobal *global-user-name* \"Charles\" \"User name to be used globally.\")"))
(setq-default swiper-history '("define-key" "swiper-thing-at-point" #("\\*\\*" 0 4 (ivy-index 42)) #(" ** 投简历，每天5份" 0 1 (swiper-line-number 217 display "217 ") 1 2 (fontified t face org-level-2 isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 2 3 (fontified t face org-level-2 isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 3 4 (fontified t face org-level-2 isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 4 12 (fontified t face org-level-2 isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) "counsel" #("maybe" 0 5 (ivy-index 2)) #("   (when (maybe-require-package 'ivy-rich)" 0 1 (swiper-line-number 28 display "28 ") 1 3 (fontified t) 3 4 (fontified t face ...) 4 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t face ...) 10 32 (fontified t) 32 33 (fontified t face highlight-quoted-quote) 33 41 (fontified t face highlight-quoted-symbol) 41 42 (fontified t face ...)) #("ivy-mode" 0 8 (ivy-index 3)) #("     (define-key ivy-mode-map (kbd \"M-s /\") 'swiper-thing-at-point)))" 0 1 (swiper-line-number 76 display "76 ") 1 5 (fontified t) 5 6 (fontified t face ...) 6 30 (fontified t) 30 31 (fontified t face ...) 31 35 (fontified t) 35 42 (fontified t face font-lock-string-face) 42 43 (fontified t face ...) 43 44 (fontified t) 44 45 (fontified t face highlight-quoted-quote) 45 66 (fontified t face highlight-quoted-symbol) 66 67 (fontified t face ...) 67 68 (fontified t face ...) 68 69 (fontified t face ...)) #("macro" 0 5 (ivy-index 49)) #(" (defun c-beginning-of-macro (&optional lim)" 0 1 (swiper-line-number 299 display "299   ") 1 2 (fontified t face ...) 2 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 28 (fontified t face font-lock-function-name-face) 28 29 (fontified t) 29 30 (fontified t face ...) 30 39 (fontified t face font-lock-type-face) 39 43 (fontified t) 43 44 (fontified t face ...)) #("ivy" 0 3 (ivy-index 11)) #("     (define-key ivy-minibuffer-map (kbd \"RET\") #'ivy-alt-done)" 0 1 (swiper-line-number 17 display "17 ") 1 5 (fontified t) 5 6 (fontified t face ...) 6 36 (fontified t) 36 37 (fontified t face ...) 37 41 (fontified t) 41 46 (fontified t face font-lock-string-face) 46 47 (fontified t face ...) 47 48 (fontified t) 48 50 (fontified t face highlight-quoted-quote) 50 62 (fontified t face highlight-quoted-symbol) 62 63 (fontified t face ...)) #("swiper" 0 6 (ivy-index 0)) #(" (when (maybe-require-package 'swiper)" 0 1 (swiper-line-number 74 display "74 ") 1 2 (fontified t face ...) 2 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face ...) 8 30 (fontified t) 30 31 (fontified t face highlight-quoted-quote) 31 37 (fontified t face highlight-quoted-symbol) 37 38 (fontified t face ...)) #("require" 0 7 (ivy-index 0)) #(" (when (maybe-require-package 'ivy)" 0 1 (swiper-line-number 5 display "5  ") 1 2 (fontified t face ...) 2 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face ...) 8 30 (fontified t) 30 31 (fontified t face highlight-quoted-quote) 31 34 (fontified t face highlight-quoted-symbol) 34 35 (fontified t face ...))))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default transient-history '((magit-commit nil ("--all") ("--all" "--allow-empty")) (rg-isearch-menu nil) (rg-menu nil ("--word-regexp"))))
(setq-default woman-topic-history '(#("LocateMe" 0 8 (ivy-index 0 idx 1004)) #("printf" 0 6 (ivy-index 1 idx 8664)) #("MMX" 0 3 (idx 407 ivy-index 0)) #("printf(1)" 0 9 (help-echo "format and print data" ivy-index 0)) #("man" 0 3 (ivy-index 0))))
(setq-default xref--history '(nil))
(setq-default xref--read-identifier-history '(#("pp" 0 2 (ivy-index 4)) #("JL_SHARE" 0 8 (ivy-index 0)) #("xrealloc" 0 8 (ivy-index 85299))))
